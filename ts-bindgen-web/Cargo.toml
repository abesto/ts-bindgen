[package]
name = "ts-bindgen-web"
version = "0.1.0"
description = "Web interface for generating wasm-bindgen bindings from typescript definitions"
authors = ["Adam Berger <adam@ratchetdesigns.com>"]
license = "MIT OR Apache-2.0"
edition = "2021"
publish = false
repository = "https://github.com/ratchetdesigns/ts-bindgen"
readme = "README.md"
keywords = ["wasm", "bindings", "typescript", "wasm-bindgen", "javascript"]
categories = ["compilers", "command-line-utilities", "development-tools::ffi", "wasm", "web-programming"]

[workspace]

[lib]
crate-type = ["cdylib", "rlib"]

[profile.release]
lto = true
opt-level = "s"

[dependencies]
wasm-bindgen = "0.2.63"
yew = "0.19.3"
ts-bindgen = { version = "0.1.0", path = "../ts-bindgen", default-features = false }

[dependencies.monaco]
version = "0.3.0"
default-features = false
features = ["yew-components"]
git = "https://github.com/siku2/rust-monaco"
rev = "cb20108c317976ba8c3d05b581a84efd394c3dbe"

[dependencies.rustfmt]
package = "rustfmt-nightly"
git = "https://github.com/rust-lang/rustfmt"
rev = "3d9b57a22e85a02edef13b8aff15ab800410ebad"

# getrandom is a transitive dependency but we need to enable the js feature
# for it to get it running on wasm
[dependencies.getrandom]
version = "^0.2.0"
features = ["js"]

# parking_lot is a transitive dependency that handles wasm32-unknown-unknown
# properly based on cfg(target_family = "wasm") but target_family = "wasm"
# support landed after the nightly compiler we're using. so we enable the
# wasm-bindgen feature here
[dependencies.parking_lot]
version = "0.11.2"
features = ["wasm-bindgen"]

# there is a pointer size comparison in this version of rustc_target that
# doesn't build on wasm but does work with a slight tweak.
[patch.crates-io.rustc-ap-rustc_target]
version = "717.0.0"
git = "https://github.com/ratchetdesigns/rustc-ap-rustc_target"
rev = "7a7f1f9469ac213e05cf0330a5e7d9eaf631007c"

[dev-dependencies]
wasm-bindgen-test = "0.2"
